{
  "info": {
    "name": "Weather App - Post API",
    "description": "Complete Post API testing collection for Weather App Backend",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3030",
      "type": "string"
    },
    {
      "key": "token",
      "value": "",
      "type": "string"
    },
    {
      "key": "placeTypeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "placeId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "postId",
      "value": "",
      "type": "string"
    },
    {
      "key": "provinceId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Setup & Authentication",
      "item": [
        {
          "name": "1. Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/health",
              "host": ["{{baseUrl}}"],
              "path": ["api", "health"]
            }
          }
        },
        {
          "name": "2. Login (Get JWT Token)",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.access_token) {",
                  "        pm.collectionVariables.set('token', response.access_token);",
                  "        console.log('JWT Token saved to collection variable');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"your_username\",\n  \"password\": \"your_password\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "3. Get Current User Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "Setup Data",
      "item": [
        {
          "name": "4. Get Place Types",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        pm.collectionVariables.set('placeTypeId', response[0].id);",
                  "        console.log('First place type ID saved:', response[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/place-types",
              "host": ["{{baseUrl}}"],
              "path": ["api", "place-types"]
            }
          }
        },
        {
          "name": "5. Get Provinces",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        pm.collectionVariables.set('provinceId', response[0].id);",
                  "        console.log('First province ID saved:', response[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/provinces",
              "host": ["{{baseUrl}}"],
              "path": ["api", "provinces"]
            }
          }
        },
        {
          "name": "6. Get Places",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.length > 0) {",
                  "        pm.collectionVariables.set('placeId', response[0].id);",
                  "        console.log('First place ID saved:', response[0].id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/places",
              "host": ["{{baseUrl}}"],
              "path": ["api", "places"]
            }
          }
        }
      ]
    },
    {
      "name": "Public Post Routes",
      "item": [
        {
          "name": "7. Get All Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        },
        {
          "name": "8. Get Posts with Pagination",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts?page=1&limit=5",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "5"
                }
              ]
            }
          }
        },
        {
          "name": "9. Get Posts by Place Type",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/place-type/{{placeTypeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "place-type", "{{placeTypeId}}"]
            }
          }
        },
        {
          "name": "10. Get Posts by Province",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/province/{{provinceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "province", "{{provinceId}}"]
            }
          }
        },
        {
          "name": "11. Search Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts?search=weather&status=approved",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "search",
                  "value": "weather"
                },
                {
                  "key": "status",
                  "value": "approved"
                }
              ]
            }
          }
        },
        {
          "name": "12. Filter by Province",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts?province_id={{provinceId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "province_id",
                  "value": "{{provinceId}}"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Protected Post Routes",
      "item": [
        {
          "name": "13. Create New Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.post && response.post.id) {",
                  "        pm.collectionVariables.set('postId', response.post.id);",
                  "        console.log('Created post ID saved:', response.post.id);",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Beautiful Weather Today!\",\n  \"body\": \"The weather at this location is absolutely perfect today. Clear blue skies and gentle breeze make it an ideal day for outdoor activities.\",\n  \"id_place\": \"{{placeId}}\",\n  \"image\": \"https://example.com/weather-image.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        },
        {
          "name": "13. Get Post by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            }
          }
        },
        {
          "name": "14. Update Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Updated: Amazing Weather Conditions\",\n  \"body\": \"Updated description: The weather conditions have been consistently amazing at this location. Perfect for photography and sightseeing!\",\n  \"image\": \"https://example.com/updated-weather-image.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            }
          }
        },
        {
          "name": "15. Get Posts by Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/posts/user/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "user", "me"]
            }
          }
        }
      ]
    },
    {
      "name": "Admin/Moderator Routes",
      "item": [
        {
          "name": "16. Get Pending Posts",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/posts/admin/pending",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "admin", "pending"]
            }
          }
        },
        {
          "name": "17. Approve Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"approved\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "approve"]
            }
          }
        },
        {
          "name": "18. Reject Post",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"rejected\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}/approve",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}", "approve"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "19. Test 404 - Post Not Found",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/posts/non-existent-id",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "non-existent-id"]
            }
          }
        },
        {
          "name": "20. Test Unauthorized - Create without token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Post\",\n  \"body\": \"This should fail without authorization\",\n  \"id_place\": \"{{placeId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        },
        {
          "name": "21. Test Validation Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Missing required fields\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/posts",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts"]
            }
          }
        }
      ]
    },
    {
      "name": "Cleanup",
      "item": [
        {
          "name": "22. Delete Test Post",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/posts/{{postId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "posts", "{{postId}}"]
            }
          }
        }
      ]
    }
  ]
}
